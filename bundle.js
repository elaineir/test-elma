(()=>{"use strict";const e="assignByDate",t={parentSelector:".backlog__tasks-container",templateSelector:".template-card-backlog",elementSelector:".card-backlog",titleSelector:".card-backlog__title",descriptionSelector:".card-backlog__description",startDateSelector:".card-backlog__date-span_start",endDateSelector:".card-backlog__date-span_end",dragStartClass:"card-backlog_draggable"},a={parentSelector:".board__users",templateSelector:".template-card-user",elementSelector:".card-user",userNameSelector:".card-user__name",dragOverClass:"card-user_drag-over"},s={parentSelector:".board__dates",templateSelector:".template-calendar-date",elementSelector:".calendar-date",currentDayClass:"calendar-date_current"},r={parentSelector:".board__calendar",templateSelector:".template-calendar-column",elementSelector:".calendar-column"},l={templateSelector:".template-calendar-cell",elementSelector:".calendar-cell",elementClass:"calendar-cell",dragOverClass:"calendar-cell_drag-over"},n={templateSelector:".template-calendar-task",elementSelector:".calendar-task",elementClass:"calendar-task",titleSelector:".calendar-task__title",subtitleSelector:".calendar-task__subtitle",descriptionSelector:".calendar-task__description",startDateSelector:".calendar-task__date-span_start",endDateSelector:".calendar-task__date-span_end"},c="ru-RU",i={weekday:"short",year:"numeric",month:"short",day:"numeric"},d={day:"numeric",month:"numeric"},o="isThemeDark",h=e=>new Date(e).toLocaleDateString(c,i),_=e=>new Date(e).toLocaleDateString("en-CA"),u=new class{constructor(){this._subscribers=[],this._assignedTasks=[],this._backlogTasks=[],this._users=[],this._usersIds={},this._calendarLength=7,this._currentDate=new Date,this._currentDateNumeric=_(new Date),this._startDay=this._updateAndSetDates()}_removeTaskFromBacklog(e){this._backlogTasks=this._backlogTasks.filter((t=>t.id!==e))}_callSubscribers(){this._subscribers.forEach((e=>e()))}_updateAndSetDates(){const e=new Date(this._currentDate.setHours(0,0,0,0));return e.setDate(e.getDate()-e.getDay()+(0===e.getDay()?-6:1))}get assignedTasks(){return this._assignedTasks}get backlogTasks(){return this._backlogTasks}get usersIds(){return this._usersIds}set users(e){this._users=e}get users(){return this._users}get calendarLength(){return this._calendarLength}get startDay(){return this._startDay}set startDay(e){this._startDay=e}get currentDateNumeric(){return this._currentDateNumeric}addTaskToAssignedTasks(e){this._assignedTasks.push(e)}assignTask({type:t,taskId:a,executorId:s,startDate:r}){const l=this._backlogTasks.find((e=>a===e.id));if(l.executor=+s,t===e){if(this._currentDate>Date.parse(r))return;if(l.planEndDate===l.planStartDate)l.planEndDate=r;else{const e=Date.parse(l.planEndDate)-Date.parse(l.planStartDate),t=Date.parse(r)+e;l.planEndDate=_(t)}l.planStartDate=r}this.addTaskToAssignedTasks(l),this._removeTaskFromBacklog(a),this._callSubscribers()}addTaskToBacklog(e){this._backlogTasks.push(e)}mapUsersIds(e){const t=e.reduce(((e,{id:t},a)=>({...e,[a]:t})),{});this._usersIds={...t}}addSubscribers(e){this._subscribers=[...e]}},m=async e=>{return(t=await fetch(`https://varankin_dev.elma365.ru/api/extensions/2a38760e-083a-4dd0-aebc-78b570bfd3c7/script${e}`,{method:"GET"})).ok?t.json():Promise.reject(t);var t},p=class{constructor({templateSelector:e,elementSelector:t}){this._templateSelector=e,this._elementSelector=t}_getTemplate(){return this._template=document.querySelector(this._templateSelector).content,this._template.querySelector(this._elementSelector).cloneNode(!0)}},S=class extends p{constructor(e,{templateSelector:t,elementSelector:a,titleSelector:s,descriptionSelector:r,startDateSelector:l,endDateSelector:n,dragStartClass:c}){super({templateSelector:t,elementSelector:a}),this._cardData=e,this._backlogCard=super._getTemplate(),this._dragStartClass=c,this._cardTitle=this._backlogCard.querySelector(s),this._cardDescription=this._backlogCard.querySelector(r),this._cardStartDate=this._backlogCard.querySelector(l),this._cardEndDate=this._backlogCard.querySelector(n),this._handleDragStart=this._handleDragStart.bind(this),this._handleDragEnd=this._handleDragEnd.bind(this)}_handleDragStart(e){this._backlogCard.classList.add(this._dragStartClass),e.dataTransfer.setData("text/plain",this._cardData.id),e.dataTransfer.effectAllowed="move"}_handleDragEnd(){this._backlogCard.classList.remove(this._dragStartClass)}createElement(){return this._cardTitle.textContent=this._cardData.subject,this._cardDescription.textContent=this._cardData.description,this._cardStartDate.textContent=h(this._cardData.planStartDate),this._cardEndDate.textContent=h(this._cardData.planEndDate),this._backlogCard.setAttribute("id",this._cardData.id),this._backlogCard}setEventListeners(){this._backlogCard.addEventListener("dragstart",this._handleDragStart),this._backlogCard.addEventListener("dragend",this._handleDragEnd)}},g=class{constructor(e){this._container=document.querySelector(e),this.clearItems=this.clearItems.bind(this)}addItem(e){this._container.append(e)}clearItems(){this._container.textContent=""}addTextContent(e){this._container.textContent=e}},D=class extends p{constructor(e,{templateSelector:t,elementSelector:a,titleSelector:s,subtitleSelector:r,descriptionSelector:l,startDateSelector:n,endDateSelector:c}){super({templateSelector:t,elementSelector:a}),this._task=e,this._taskElement=super._getTemplate(),this._titleELement=this._taskElement.querySelector(s),this._subtitleELement=this._taskElement.querySelector(r),this._descriptionElement=this._taskElement.querySelector(l),this._startDateElement=this._taskElement.querySelector(n),this._endDateElement=this._taskElement.querySelector(c)}createElement(){return this._titleELement.textContent=this._task.subject,this._subtitleELement.textContent=this._task.subject,this._descriptionElement.textContent=this._task.description,this._startDateElement.textContent=h(this._task.planStartDate),this._endDateElement.textContent=h(this._task.planEndDate),this._taskElement}},k=class extends p{constructor(e,{templateSelector:t,elementSelector:a}){super({templateSelector:t,elementSelector:a}),this._cell=e,this._cellElement=super._getTemplate()}_addItem(e){this._cellElement.append(e)}createElement(){return this._cellElement.setAttribute("data-executor",this._cell.executor),this._cellElement.setAttribute("data-date",this._cell.date),this._cellElement}renderItems(){this._cell.tasks.forEach((e=>{const t=new D(e,n);this._addItem(t.createElement())}))}},b=class extends p{constructor(e,{templateSelector:t,elementSelector:a}){super({templateSelector:t,elementSelector:a}),this._column=e,this._calendarColumn=super._getTemplate(),this._dayTasksSchema={}}_getTasksForCurrentDay(e){const t=Date.parse(this._column.date);return e.filter((e=>Date.parse(e.planStartDate)<=t&&t<=Date.parse(e.planEndDate)))}_getDayTasksSchema(){this._tasksForCurrentDay=this._getTasksForCurrentDay(u.assignedTasks),this._tasksForCurrentDay&&this._tasksForCurrentDay.forEach((e=>{this._dayTasksSchema[e.executor]?this._dayTasksSchema[e.executor]=[...this._dayTasksSchema[e.executor],e]:this._dayTasksSchema[e.executor]=[e]}))}createCells(){this._getDayTasksSchema();for(let e=0;e<u.users.length;e+=1){const t=u.usersIds[e],a=new k({executor:t,date:this._column.date,tasks:this._dayTasksSchema[t]??[]},l),s=a.createElement();a.renderItems(),this.addItem(s)}}createElement(){return this.createCells(),this._calendarColumn}addItem(e){this._calendarColumn.append(e)}},C=class extends p{constructor({date:e},{templateSelector:t,elementSelector:a,currentDayClass:s}){super({templateSelector:t,elementSelector:a}),this._date=e,this._currentDayClass=s,this._dateElement=super._getTemplate()}createElement(){const e=new Date(this._date);return this._dateElement.textContent=new Date(e).toLocaleDateString(c,d),this._date===u.currentDateNumeric&&this._dateElement.classList.add(this._currentDayClass),this._dateElement}},E=class extends p{constructor(e,{templateSelector:t,elementSelector:a,userNameSelector:s,dragOverClass:r}){super({templateSelector:t,elementSelector:a}),this._cardData=e,this._userCard=super._getTemplate(),this._fullNameElement=this._userCard.querySelector(s),this._dragOverClass=r,this._handleDragOver=this._handleDragOver.bind(this),this._handleDragLeave=this._handleDragLeave.bind(this),this._handleDrop=this._handleDrop.bind(this)}_handleDragOver(e){e.dataTransfer&&"text/plain"===e.dataTransfer.types[0]&&(e.preventDefault(),this._userCard.classList.add(this._dragOverClass))}_handleDragLeave(){this._userCard.classList.remove(this._dragOverClass)}_handleDrop(e){e.preventDefault();const t=e.dataTransfer.getData("text/plain");u.assignTask({type:"assignByUser",taskId:t,executorId:this._cardData.id}),this._handleDragLeave()}createCard(){return this._fullNameElement.textContent=`${this._cardData.firstName} ${this._cardData.surname}`,this._userCard}setEventListeners(){this._userCard.addEventListener("dragover",this._handleDragOver),this._userCard.addEventListener("dragleave",this._handleDragLeave),this._userCard.addEventListener("drop",this._handleDrop)}},y=e=>{setTimeout((()=>{e.removeAttribute("style")}),1100)},v=(e,t)=>{e.setAttribute("style",`animation: slide-in-bottom-up 0.5s ease-out 0.${t}s forwards; opacity: 0;`),y(e)},T=(e,t)=>{e.setAttribute("style",`animation: slide-in-right-left 0.5s ease-out 0.${t}s forwards; opacity: 0;`),y(e)},L=document.querySelector(".page"),f=document.querySelector(".preloader"),x=new class{constructor(e){this._selectors=e,this._popup=document.querySelector(e.popupError)}open(){this._popup.classList.add(this._selectors.popupOpenClass),this._close()}_close(){setTimeout((()=>{this._popup.classList.remove(this._selectors.popupOpenClass)}),3e3)}}({popupError:".popup_error",popupOpenClass:"popup_open"}),I=new g(t.parentSelector),w=new g(a.parentSelector),q=new g(s.parentSelector),O=new class extends g{constructor(e){super(e),this._handleDragOver=this._handleDragOver.bind(this),this._handleDragLeave=this._handleDragLeave.bind(this),this._handleDrop=this._handleDrop.bind(this)}_handleDragOver(e){const{target:t}=e;e.dataTransfer&&"text/plain"===e.dataTransfer.types[0]&&(t.classList.contains(l.elementClass)||t.classList.contains(n.elementClass))&&(e.preventDefault(),this._droppableCell=t.closest(l.elementSelector),this._droppableCell.classList.add(l.dragOverClass))}_handleDragLeave(){this._droppableCell.classList.remove(l.dragOverClass)}_handleDrop(t){t.preventDefault();const a=t.dataTransfer.getData("text/plain");u.assignTask({type:e,taskId:a,executorId:this._droppableCell.dataset.executor,startDate:this._droppableCell.dataset.date}),this._handleDragLeave()}setEventListeners(){this._container.addEventListener("dragover",this._handleDragOver),this._container.addEventListener("dragleave",this._handleDragLeave),this._container.addEventListener("drop",this._handleDrop)}}(r.parentSelector);O.setEventListeners();const N=e=>{for(let t=0;t<u.calendarLength;t+=1){const a=u.startDay+864e5*t,l=_(a),n=new C({date:l},s),c=new b({date:l},r),i=n.createElement(),d=c.createElement();e&&(T(i,t),T(d,t)),q.addItem(i),O.addItem(d)}},A=e=>{const a=new S(e,t),s=a.createElement();return a.setEventListeners(),s},F=e=>{u.backlogTasks.forEach(((t,a)=>{const s=A(t);e&&a<=12&&v(s,a),I.addItem(s)}))};Promise.all([m("/users"),m("/tasks")]).then((([e,t])=>{t.forEach((e=>{e.executor?u.addTaskToAssignedTasks(e):u.addTaskToBacklog(e)})),u.users=e,u.mapUsersIds(e),((e,t)=>{e.forEach(((e,t)=>{const s=new E(e,a),r=s.createCard();t<=8&&v(r,t),s.setEventListeners(),w.addItem(r)}))})(e),N(!0),F(!0)})).catch((()=>x.open())).finally((()=>{L.classList.remove("page_hidden"),f.classList.remove("preloader_visible")})),((e,t,a)=>{const s=document.querySelector(".search-form"),r=s.querySelector(".search-form__input"),l=s.querySelector(".button_search");s.addEventListener("submit",(s=>{s.preventDefault();const n=r.value;let c;n.length&&(c=u.backlogTasks.filter((e=>e.subject.toLowerCase().includes(n.toLowerCase()))),e.clearItems(),c.length?c.forEach((a=>{const s=t(a);e.addItem(s)})):(e.addTextContent("Ничего не нашлось"),l.disabled=!0,setTimeout((()=>{e.clearItems(),a(),l.disabled=!1}),3e3)))}))})(I,A,F),((e,t,a)=>{const s=document.querySelector(".button_next"),r=document.querySelector(".button_prev");s.addEventListener("click",(()=>{e(),t(),u.startDay+=6048e5,a()})),r.addEventListener("click",(()=>{e(),t(),u.startDay-=6048e5,a()}))})(O.clearItems,q.clearItems,N),(({bodySelector:e,bodyNewThemeClass:t,buttonSelector:a})=>{const s=document.querySelector(e),r=document.querySelector(a);JSON.parse(localStorage.getItem(o))&&s.classList.add(t),r.addEventListener("click",(()=>{s.classList.contains(t)?(s.classList.remove(t),localStorage.setItem(o,JSON.stringify(!1))):(s.classList.add(t),localStorage.setItem(o,JSON.stringify(!0)))}))})({bodySelector:".body",bodyNewThemeClass:"body_theme_dark",buttonSelector:".button_theme",buttonNewThemeClass:"button_theme_dark"}),u.addSubscribers([O.clearItems,I.clearItems,q.clearItems,N,F])})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,